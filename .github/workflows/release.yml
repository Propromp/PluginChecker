name: Build and release
on:
  push:
    branches:
      - main
jobs:
  constants:
    runs-on: ubuntu-latest
    outputs:
      minecraft-version: "1.16.5"
      java-version: "8"
    steps:
      - run: echo constants
  build:
    needs: [constants]
    runs-on: ubuntu-latest
    outputs:
      filename: ${{ steps.get-filename.outputs.filename }}
      version: ${{ steps.get-version.outputs.value }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/gradle.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Set up JDK
        uses: actions/setup-java@v2.3.0
        with:
          distribution: temurin
          java-version: ${{ needs.constants.outputs.java-version }}
      - name: Configure Git User Details
        run: git config --global user.email "actions@github.com" && git config --global user.name "Github Actions"
      - name: ShadowJar
        run: ./gradlew shadowJar
      - name: Get file name
        id: get-filename
        run: echo ::set-output name=filename::$(ls -1 ./build/libs/)
      - name: Get version
        id: get-version-raw
        uses: thecodemonkey/action-get-gradle-version@master
        with:
          file: ./build.gradle.kts
      - name: Format version string
        id: get-version
        uses: mad9000/actions-find-and-replace-string@2
        with:
          source: ${{ steps.get-version-raw.outputs.version }}
          find: "'"
          replace: ''
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        if: "!failure()"
        with:
          name: jar
          path: build/libs/${{ steps.get-filename.outputs.filename }}
  release:
    runs-on: ubuntu-latest
    needs: [build,constants]
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: jar
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.build.outputs.version }}-${{ github.run_number }}
          release_name: ${{ needs.build.outputs.version }}-${{ github.run_number }} ${{ github.event.head_commit.message }}
          body: ""
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ needs.build.outputs.filename }}
          asset_name: ${{ needs.build.outputs.filename }}
          asset_content_type: application/zip